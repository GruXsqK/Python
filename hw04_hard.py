
__author__ = 'Белинский Андрей Петрович'

# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

print(list(map(list, zip(*matrix))))

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

def multi_string(number_str):
    multi_string = 1
    for value in number_str:
        multi_string *= int(value)
    return multi_string

# удаляем спецсимволы
line_numb = ''
for idx, elem in enumerate(number):
    if not number[idx].isspace():
        line_numb += number[idx]

# собираем список из 5-ти последовательных чисел
mult_list = []
for idx, elem in enumerate(line_numb):
    mult_list.append(multi_string(line_numb[idx:idx+5]))

max_elem = max(mult_list)
max_ind = mult_list.index(max_elem)
print('Максимальное произведение 5-ти чисел =', max_elem, ', его index =', max_ind)

# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

def compare_chess(list_chess):

    def compare_pair(list_1, list_2):
        cond_1 = list_1[0] != list_2[0]
        cond_2 = list_1[1] != list_2[1]
        if abs(list_1[1] - list_2[1]) and abs(list_1[0] - list_2[0]):
            cond_3 = abs(list_1[0] - list_2[0]) / abs(list_1[1] - list_2[1])
        else:
            cond_3 = 0

        if cond_1 and cond_2 and cond_3 != 1:
            return True
        else:
            return False

    i = 0
    check = True
    while i < len(list_chess):
        if check:
            j = i + 1
            while j < len(list_chess):
                if compare_pair(list_chess[i], list_chess[j]):
                    check = True
                    j += 1
                else:
                    check = False
                    break
            i += 1
            ans = 'YES'
        else:
            ans = 'NO'
            break

    return ans

list_chess = [[1, 7], [2, 4], [3, 2], [4, 8], [5, 6], [6, 1], [7, 3], [8, 5]]

print(compare_chess(list_chess))