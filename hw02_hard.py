
__author__ = 'Белинский Андрей Петрович'

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y


# найдем коэффициенты в срезе, определяемом по соответствующим символам

k = float(equation[equation.find('=')+1:equation.find('x')])
b = float(equation[equation.find('+')+1:])
print('y =', k * x + b, ' при x =', x)
print()


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
# date = '01.11.1985'

# Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'

date = '10.04.2019'

# определение среза по '.'

dd = date[:date.find('.')]
mm = date[date.find('.')+1:date.find('.', date.find('.')+1)]
yyyy = date[date.find('.', date.find('.')+1)+1:]
long_month = [1, 3, 5, 7, 8, 10, 12]        # список месяцев с 31 днем

if len(dd) == 2 and len(mm) == 2 and len(yyyy) == 4:
    dd = int(dd)
    mm = int(mm)
    yyyy = int(yyyy)

    if 1 <= yyyy <= 9999:
        if 1 <= mm <= 12:
            if ((1 <= dd <= 31) and (long_month.count(mm) != 0)) or (1 <= dd <= 30):
                print('Дата введена корректно')
            else:
                print('Неверная дата')
        else:
            print('Неверно указан месяц')
    else:
        print('Неверно указан год')
else:
    print('Неверное количество символов для даты, месяца или года')

print()


# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3

N = int(input('Введите номер комнаты:\n'))

if 1 <= N <= 2*10**9:
    room = 0
    floor = 0
    id_room = 0
    block = 0

# поиск квадратного блока с искомой комнатой снизу вверх

    while room < N:
        block += 1
        floor = floor + block
        room = room + block ** 2
    else:

# поиск этажа с искомой комнатой сверху вниз

        while room >= N:
            room = room - block
            floor -= 1
        else:

# поиск комнаты на этаже снизу вверх

            floor += 1

            while room != N:
                room += 1
                id_room += 1

            print('Этаж', floor, 'комната', id_room, 'слева')

elif (N < 1):
    print('Неверный номер комнаты')

else:
    print('Слишком большой номер комнаты')